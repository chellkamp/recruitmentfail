@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Reset User Password";
}

@using RecruitmentFailWeb.Models.Account

@model RequestPasswordResetDetails

<div class="container">
    @using(Html.BeginForm("RequestPasswordReset", "AccountAPI", FormMethod.Post, new {@id="requestForm"}))
    {
        <div class="row my-2">
            <div class="text-danger col-md-8 response-error"></div>
        </div>
        <div class="row my-2">
            @Html.ValidationSummary(true, null, new {@class="text-danger col-md-8"})
        </div>
        <div class="row my-2">
            @Html.LabelFor(m => m.Email, null, new {@class="control-label col-md-3"})
            <div class="form-group col-md-5">
                @Html.EditorFor(m => m.Email, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(m => m.Email, null, new {@class="text-danger"})
            </div>
        </div>
        <div class="row my-4">
            <div class="col-md-8 text-end">
                <button type="button" class="submit btn btn-primary">Request Password Reset</button>
            </div>
        </div>
    }

</div>


<div id="newPassDlg" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("ResetPassword", "AccountAPI", FormMethod.Post, new { @id = "resetForm" }))
            {
                <div class="modal-header">
                    <h5 class="modal-title">Reset Password</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row my-2">
                            <p>Check your email for your verification code and enter it in the Code field.</p>
                            <p>Choose your new password.</p>
                        </div>
                        <div class="row my-2">
                            <div class="text-danger response-error"></div>
                        </div>
                        <div class="row my-2">
                            <label for="Code" class="control-label col-md-5">Code</label>
                            <div class="form-group col-md-7">

                                <input class="form-control text-box single-line"
                                   data-val="true"
                                   data-val-required="The Code field is required."
                                   id="Code"
                                   name="Code"
                                   type="text"
                                   value="" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Code" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="row my-2">
                            <label class="control-label col-md-5" for="NewPassword">New Password</label>
                            <div class="form-group col-md-7">
                                <input class="form-control"
                                   data-val="true"
                                   data-val-cognitopassword=""
                                   data-val-cognitopassword-maxlength="256"
                                   data-val-cognitopassword-minlength="8"
                                   data-val-cognitopassword-requiredchars="15"
                                   data-val-required="The New Password field is required."
                                   id="NewPassword" name="NewPassword" type="password" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewPassword" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="row my-2">
                            <label class="control-label col-md-5" for="NewPasswordConfirm">Confirm New Password</label>
                            <div class="form-group col-md-7">
                                <input class="form-control"
                                   data-val="true"
                                   data-val-confirm=""
                                   data-val-confirm-matchingfieldname="NewPassword"
                                   data-val-required="The Confirm New Password field is required."
                                   id="NewPasswordConfirm"
                                   name="NewPasswordConfirm"
                                   type="password" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewPasswordConfirm" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="submit btn btn-primary">Set Password</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>


<div id="successDlg" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Password Set</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Your new password is set. Use your new password during the next time you log in.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="submit btn btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




@section scripts
{
    <script>
        // custom validation
        $.validator.addMethod('cognitopassword', RecruitmentFailValidation.validateCognitoPassword);
        $.validator.unobtrusive.adapters.add(
            'cognitopassword',
            ['minlength', 'maxlength', 'requiredchars'],
            function (options) {
                options.rules['cognitopassword'] = [
                    parseInt(options.params['minlength']),
                    parseInt(options.params['maxlength']),
                    parseInt(options.params['requiredchars'])
                ];

                options.messages['cognitopassword'] = 'Password does not meet requirements.';
            }
        );

        $.validator.addMethod('confirm', RecruitmentFailValidation.validateConfirm);
        $.validator.unobtrusive.adapters.add(
            'confirm',
            ['matchingfieldname'],
            function (options) {
                let matchingFieldName = options.params['matchingfieldname'];
                let context = options.form;

                options.rules['confirm'] = [context, matchingFieldName];
                options.messages['confirm'] = 'New Password fields must match.';
            }
        );

        $(document).ready(function($){
            let newPassDlgDiv = $("#newPassDlg")[0];
            let successDlgDiv = $("#successDlg")[0];

            // dialog configuration

            let newPassDlgObj = new bootstrap.Modal(newPassDlgDiv, {backdrop: 'static'});
            let successDlgObj = new bootstrap.Modal(successDlgDiv, {backdrop: 'static'});

            $(newPassDlgDiv).on('shown.bs.modal', function(){
                $(newPassDlgDiv).trigger('focus');
            });

            $(successDlgDiv)
                .on('shown.bs.modal', function () {
                    $(successDlgDiv).trigger('focus');
                })
                .on('hidden.bs.modal', function(){
                    window.location = "@Url.Action("Login")";
                });


            $("#requestForm .submit").click(function(e){
                let formQuery = $(e.target).closest("form");
                let formObj = formQuery[0];

                try {
                    formQuery.validate();

                    if (formQuery.valid()) {
                        // disable form
                        formQuery.find(":input").prop("disabled", true);

                        let action = formObj.action;
                        let email = formQuery.find("input[name=Email]").val();

                        $.post({
                            url: action,
                            data: {
                                email: email
                            },
                            dataType: 'text',
                            complete: function (resp, status) {
                                formQuery.find(":input").prop("disabled", false);
                            },
                            success: function (data, status, resp) {
                                let dlgFormQuery = $("#newPassDlg form");

                                dlgFormQuery.find(":input").val(""); // clear inputs

                                // set up unobtrusive validation for dynamic elements
                                dlgFormQuery.removeData("validator")    // Added by jQuery Validation
                                    .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
                                $.validator.unobtrusive.parse(dlgFormQuery);

                                // reset validation
                                dlgFormQuery.validate().resetForm();

                                // Reset MVC summary errors
                                dlgFormQuery.find("[data-valmsg-summary=true]")
                                    .removeClass("validation-summary-errors")
                                    .addClass("validation-summary-valid")
                                    .find("ul").empty();

                                // Reset MVC unobtrusive field level, if it exists
                                dlgFormQuery.find("[data-valmsg-replace]")
                                    .removeClass("field-validation-error")
                                    .addClass("field-validation-valid")
                                    .empty();

                                newPassDlgObj.show();
                            },
                            error: function (resp, status, errMsg) {
                                formQuery.find(".response-error").html(resp.responseText);
                            }
                        });

                    }
                } catch (err) {
                    formQuery.find(".response-error").html(err);
                    formQuery.find(":input").prop("disabled", false);
                }

            });

            $("#resetForm .submit").click(function (e) {
                let formQuery = $(e.target).closest("form");
                let formObj = formQuery[0];
                let requestFormQuery = $("#requestForm");

                try {
                    formQuery.validate();

                    if (formQuery.valid()) {
                        // disable form
                        formQuery.find(":input").prop("disabled", true);

                        let action = formObj.action;

                        let email = requestFormQuery.find("input[name=Email]").val();
                        let code = formQuery.find("input[name=Code]").val();
                        let newPassword = formQuery.find("input[name=NewPassword]").val();
                        let newPasswordConfirm = formQuery.find("input[name=NewPasswordConfirm]").val();

                        $.post({
                            url: action,
                            data: {
                                email: email,
                                code: code,
                                newPassword: newPassword,
                                newPasswordConfirm: newPasswordConfirm
                            },
                            dataType: 'text',
                            complete: function (resp, status) {
                                formQuery.find(":input").prop("disabled", false);
                            },
                            success: function (data, status, resp) {
                                let newPassDlgQuery = $("#newPassDlg");
                                let successDlgQuery = $("#successDlg");

                                newPassDlgObj.hide();
                                successDlgObj.show();
                            },
                            error: function (resp, status, errMsg) {
                                formQuery.find(".response-error").html(resp.responseText);
                            }
                        }); // end call to post()

                    }
                } catch (err) {
                    formQuery.find(".response-error").html(err);
                    formQuery.find(":input").prop("disabled", false);
                }
            });


            /*

            $("#resetForm").submit(function(e){
                let formObj = e.target;
                let formQuery = $(e.target);
                let requestFormQuery = $("#requestForm");

                try {
                    formQuery.validate();

                    if(formQuery.valid()) {
                        // disable form
                        formQuery.find(":input").prop("disabled", true);

                        let action = formObj.action;

                        let email = requestFormQuery.find("input[name=Email]").val();
                        let code = formQuery.find("input[name=Code]").val();
                        let newPassword = formQuery.find("input[name=NewPassword]").val();
                        let newPasswordConfirm = formQuery.find("input[name=NewPasswordConfirm]").val();

                        $.post({
                            url: action,
                            data: {
                                email: email,
                                code: code,
                                newPassword: newPassword,
                                newPasswordConfirm: newPasswordConfirm
                            },
                            dataType: 'text',
                            complete: function (resp, status) {
                                formQuery.find(":input").prop("disabled", false);
                            },
                            success: function (data, status, resp) {
                                let newPassDlgQuery = $("#newPassDlg");
                                let successDlgQuery = $("#successDlg");

                                newPassDlgQuery.modal('hide');
                                successDlgQuery.modal('show');
                                
                            },
                            error: function (resp, status, errMsg) {
                                formQuery.find(".response-error").html(resp.responseText);
                            }
                        }); // end call to post()

                    }
                } catch(err) {
                    formQuery.find(".response-error").html(err);
                    formQuery.find(":input").prop("disabled", false);
                    return false;
                }
                return false;
            });
            */
        });
    </script>
}